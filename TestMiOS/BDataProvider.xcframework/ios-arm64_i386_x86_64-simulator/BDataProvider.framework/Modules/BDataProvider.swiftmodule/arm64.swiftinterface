// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
// swift-module-flags: -target arm64-apple-ios8.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BDataProvider
@_exported import BDataProvider
import Foundation
import Swift
import _Concurrency
public typealias Delelopers = Swift.Array<BDataProvider.Developer>
@objc public class Developer : ObjectiveC.NSObject {
  public var name: Swift.String
  public var address: Swift.String {
    get
  }
  public var codingLevel: Swift.String {
    get
  }
  public var photoURL: Swift.String? {
    get
  }
  public var encryptionKey: Swift.String {
    get
  }
  public init(name: Swift.String, address: Swift.String, codingLevel: Swift.String, photoURL: Swift.String?)
  @objc deinit
}
@objc public protocol TeamDataProviderDelegate {
  @objc weak var teamUIDelegate: BDataProvider.TeamDataUpdaterDelegate? { get set }
  @objc func provideTeamMemberIDs(completion: (_ list: Swift.Array<Swift.String>) -> ())
  @objc func provideMemberInformationForID(id: Swift.String, completion: (_ developer: BDataProvider.Developer?) -> ())
}
@objc public protocol TeamDataUpdaterDelegate {
  @objc func teamListShouldBeRefreshed()
  @objc func informationForMemberWithIDhasChanged(memberID: Swift.String)
}
@_inheritsConvenienceInitializers @objc public class TeamProvider : ObjectiveC.NSObject, BDataProvider.TeamDataProviderDelegate {
  @objc weak public var teamUIDelegate: BDataProvider.TeamDataUpdaterDelegate?
  @objc public func provideTeamMemberIDs(completion: (_ list: Swift.Array<Swift.String>) -> ())
  @objc public func provideMemberInformationForID(id: Swift.String, completion: (_ developer: BDataProvider.Developer?) -> ())
  @objc override dynamic public init()
  @objc deinit
}
